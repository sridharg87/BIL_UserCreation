# UTF-8
/* Creation of participating forwards and Tarko Contracts */
Domain PT_Contract
    @t24:i (module=PT)
    @java:Package (value=com.temenos.t24.datamodel.pt.pt_contract)
namespace "http://www.temenos.com/t24/PT_Contract"
metamodelVersion 1.30.6
Classes {
/* FX Participating Forward (PF) is an OTC contract to buy or sell the underlying currency periodically at a pre-fixed exchange rate.

A participating forward transaction allows the investor to

(i) Under a bullish structure, buy a pre-fixed amount of the underlying currency (the "Currency Amount") on each periodic settlement date at a discounted exchange rate of the currency pair (being set as the Strike Price) compared to the exchange rate of the currency pair on the trade date.

(ii) Under a bearish structure, sell the pre-fixed Currency Amount of the underlying currency on each periodic settlement date at a premium exchange rate of the currency pair (being set as the Strike Price) compared to the exchange rate of the currency pair on the trade date.

Provided no Knock-out Event has occurred prior to the expiration time on the last expiration date, an investor is obliged to buy (under a bullish structure) or sell (under a bearish structure) a pre-fixed Currency Amount of the underlying currency at the Strike Price on each settlement date.

TARKO - is an OTC contract which is similar to the Participating Forward.  The only difference is that the Knock Out barrier is not an exchange rate but rather the intrinsic value of the accumulated profits. In other words, the contract will get Knocked out if the intrinsic value of the accumulated profits reaches a pre - determined amount.

These products being OTC products, the bank is acting as a principal. Typically the booking model would be as below :
Client vs Bank's Own Book  - This is the client leg of the deal.
Bank's own book vs counterparty - This is the street leg of the deal.
These two deals are linked together by the field B2B reference. Both deals would have the same value in this field,  the system would then recognize these as linked deals.
The field COUNTERPARTY.TRADE needs to be set to 'Yes' in the street leg, indicating to the system that this is the street leg. */
    SY_FX_FORWARDS
        @i18n:Description (en="")
        @t24:i (t24Name=SY.FX.FORWARDS, level=F, type=H, allowedFunctions="A C D E I L P Q R S", localRefAllowed=true)
    {
/* This field is used to store the accumulated intrinsic value for TARKO Contracts. The accumulated intrinsic profit may change during each fixing and the same needs to be captured for information purposes.
This field needs to be updated manually and there is no system calculation. Used only for information purposes. */
        ACCR_INTRINSIC_VAL : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=54.0, core=true, t24Name=ACCR.INTRINSIC.VAL)
        AUDITOR_CODE : T24BusinessTypes:A
            @i18n:Label (en="Auditor Code")
            @i18n:Tooltip (en="Auditor Code")
            @t24:i (align=L, inputBehaviour=E, maxLength=16, sysNumber=215.0, core=true, t24Name=AUDITOR.CODE)
        AUDIT_DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Audit Date Time")
            @i18n:Tooltip (en="Date and time when record was audited")
            @t24:i (align=L, inputBehaviour=E, maxLength=15, sysNumber=216.0, core=true, t24Name=AUDIT.DATE.TIME, mask="RDD DD  DD ##:##")
        AUTHORISER : T24BusinessTypes:A
            @i18n:Label (en=Authoriser)
            @i18n:Tooltip (en="Indicates the User who Authorises the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=212.0, core=true, t24Name=AUTHORISER)
/* FX participating forwards and Tarko contracts are booked as two transactions. The Client transacts with the bank (dealer book). The bank then covers or hedges this position by entering into a back to back transaction with the counterparty.
Both the client leg and the counterparty leg transaction would have the same value in this field, thereby conveying to the system that this two contracts are linked. */
        B2B_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="B2B Reference")
            @i18n:Tooltip (en="Back to Back reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=41.0, core=true, t24Name=B2B.REFERENCE)
        /* The base currency within the currency pair (CURRENCY.BOUGHT and CURRENCY.SOLD) is updated in this field. */
        BASE_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Base Ccy")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=14.0, core=true, businessType=CCY, t24Name=BASE.CCY)
        /* The holiday calendar to be used for "CURRENCY.BOUGHT". Accepts a valid country or region. If country code is input, default region (00) would be used. */
        BUY_CCY_CALENDAR : T24BusinessTypes:A
            @i18n:Label (en="Buy Currency Calendar")
            @i18n:Tooltip (en="Buy Currency Calendar")
            @t24:i (align=L, inputBehaviour=F, maxLength=4, sysNumber=6.0, core=true, t24Name=BUY.CCY.CALENDAR)
        /* The Call amount (amount bought ) is updated in this field. If the B.CALL.CCY is equl to BASE.CCY,  user needs to input the amount, otherwise system will derive the amount  from  B.PUT.AMT and B.STRIKE.PRICE. */
        B_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Call Amount")
            @i18n:Tooltip (en="Buy Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=63.0, core=true, t24Name=B.CALL.AMT)
        /* This field will hold the call currency of the buy option. This will be populated with CURRENCY.BOUGHT */
        B_CALL_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Buy Call Currency")
            @i18n:Tooltip (en="Buy Call Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=62.0, core=true, businessType=CCY, t24Name=B.CALL.CCY)
        /* This field needs to be set to 'Yes', if the B.CALL.AMT and B.PUT.AMT is not constant for all fixing periods.  Once the flag is set , the user can change the amount for specific fixings. */
        B_DIFFERENT_AMT : PT_Contract:SY_FX_FORWARDS__B_DIFFERENT_AMT
            @i18n:Label (en="Buy Different Amount")
            @i18n:Tooltip (en="Buy Different Amount")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=66.0, core=true, t24Name=B.DIFFERENT.AMT)
        /* This field will hold the reference of the underlying buy option contract (DX.TRADE ID). */
        B_DX_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="Buy DX Trade Reference")
            @i18n:Tooltip (en="Buy DX Trade Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=80.0, core=true, t24Name=B.DX.REFERENCE)
        B_FIXING_DATE -> byValue PT_Contract:SY_FX_FORWARDS__B_FIXING_DATE *
            @t24:i (t24Name=B.FIXING.DATE)
/* This field can be used to specify the fixing frequency for the buy option. Based on the fixing frequency, the fixing schedule will be generated.
The exercise or expiration of the underlying option would happen on the respective B.FIXING.DATE */
        B_FIXING_FREQUENCY : T24BusinessTypes:FQU
            @i18n:Label (en="Buy Fixing Frequency")
            @i18n:Tooltip (en="Buy Fixing Frequency")
            @t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=67.0, core=true, t24Name=B.FIXING.FREQUENCY, mask="RDDDD DD  DD #####")
/* This field will hold the number of fixing periods in the buy option life cycle. This field is optional field, if given then specified number of fixing cycles will be generated and the last fixing cycle will be defaulted as maturity date.
If the number of periods is not mentioned then based on the MATURITY.DATE the fixing cycles will be populated. */
        B_FIXING_PERIODS : T24BusinessTypes:N
            @i18n:Label (en="Buy Fixing Periods")
            @i18n:Tooltip (en="Buy Fixing Periods")
            @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=68.0, core=true, t24Name=B.FIXING.PERIODS)
        /* If this field is not null, then the option would be deemed to have a knock in barrier. Only when B.KNOCK.IN is set to yes then the option can be exercised. */
        B_KNOCKIN_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Knock In Price")
            @i18n:Tooltip (en="Buy Knock In Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=73.0, core=true, t24Name=B.KNOCKIN.PRICE)
        /* For the TARKO variant , the target redemption (accumulated intrinsic value of the contract) is captured in this field. */
        B_KNOCKOUT_INTRINSIC : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Knock Out Intrinsic Value")
            @i18n:Tooltip (en="Buy Knock Out Intrinsic Value")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=76.0, core=true, t24Name=B.KNOCKOUT.INTRINSIC)
        /* The Knock out barrier price field can be defined in this field. */
        B_KNOCKOUT_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Knock Out Price")
            @i18n:Tooltip (en="Buy Knock Out Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=75.0, core=true, t24Name=B.KNOCKOUT.PRICE)
        /* When this field is set to 'Yes', it indicates to the system that the buy option is knocked in. If there is a 'B.KNOCKIN.PRICE' defined, then this field needs to be set to 'Yes' , before the option can be exercised. */
        B_KNOCK_IN : PT_Contract:SY_FX_FORWARDS__B_KNOCK_IN
            @i18n:Label (en="Buy Knock In")
            @i18n:Tooltip (en="Buy Knock In")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=72.0, core=true, t24Name=B.KNOCK.IN)
        /* When this field is set to 'Yes', it indicates to the system that the buy option is knocked out. Once it is Knocked out, the option cannot be exercised. */
        B_KNOCK_OUT : PT_Contract:SY_FX_FORWARDS__B_KNOCK_OUT
            @i18n:Label (en="Buy Knock Out")
            @i18n:Tooltip (en="Buy Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=74.0, core=true, t24Name=B.KNOCK.OUT)
        /* The field holds the maturity date of the  buy option and it should not be greater than MATURITY.DATE of the contract. The last FIXING.DATE of the option will be defaulted to MATURITY.DATE. */
        B_MATURITY_DATE : T24BusinessTypes:D
            @i18n:Label (en="Buy Maturity Date")
            @i18n:Tooltip (en="Buy Maturity Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=69.0, core=true, t24Name=B.MATURITY.DATE)
        /* This field holds the option style for the buy option. OPTION.STYLE will be defaulted from DX.CONTRACT.MASTER. Allowed values are 'AMERICAN', 'EUROPEAN','CARRIBEAN'. */
        B_OPTION_STYLE : PT_Contract:SY_FX_FORWARDS__B_OPTION_STYLE
            @i18n:Label (en="Buy Option Style")
            @i18n:Tooltip (en="Buy Option Style")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=59.0, core=true, t24Name=B.OPTION.STYLE)
        /* This field will say the option type of the underlying buy option that is getting created. The value will be defaulted to 'CALL'. */
        B_OPTION_TYPE : PT_Contract:SY_FX_FORWARDS__B_OPTION_TYPE
            @i18n:Label (en="Buy Option Type")
            @i18n:Tooltip (en="Buy Option Type")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=60.0, core=true, t24Name=B.OPTION.TYPE)
        /* The put amount (amount sold) is updated in this field. If B.PUT.CCY is equal to BASE.CCY, user need to input the value, otherwise the value is derived by the system from B.CALL.AMT and B.STRIKE.PRICE. */
        B_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Put Amount")
            @i18n:Tooltip (en="Buy Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=65.0, core=true, t24Name=B.PUT.AMT)
        /* This field holds the put currency of the buy option. The value in CURRENCY.SOLD is updated in this field. */
        B_PUT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Buy Put Currency")
            @i18n:Tooltip (en="Buy Put Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=64.0, core=true, businessType=CCY, t24Name=B.PUT.CCY)
        /* When this field is set to 'Yes', and  B.KNOCKOUT is set to 'Yes', then the current fixing is effected before the option is knocked out. */
        B_RUN_CURRENT_FIXING : PT_Contract:SY_FX_FORWARDS__B_RUN_CURRENT_FIXING
            @i18n:Label (en="Buy Run Current Fixing")
            @i18n:Tooltip (en="Buy Run Current Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=77.0, core=true, t24Name=B.RUN.CURRENT.FIXING)
        /* Strike price for the buy option is keyed in this field. */
        B_STRIKE_PRICE : T24BusinessTypes:AMT required
            @i18n:Label (en="Buy Strike Price")
            @i18n:Tooltip (en="Buy Strike Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=61.0, core=true, t24Name=B.STRIKE.PRICE)
        /* This field holds the total amount of currency bought for the buy option. This would be sum of the call amount(B.SCHEDULE.CALL.AMT) for each fixing. */
        B_TOTAL_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Total Call Amount")
            @i18n:Tooltip (en="Buy Total Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=70.0, core=true, t24Name=B.TOTAL.CALL.AMT)
        /* This field holds the total amount of the currency sold for the buy option. This woulld be sum of the put amount(B.SCHEDULE.PUT.AMT) for each fixing. */
        B_TOTAL_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Total Put Amount")
            @i18n:Tooltip (en="Buy Total Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=71.0, core=true, t24Name=B.TOTAL.PUT.AMT)
        /* Yes or No field. Yes Indicates that fixing needs to be undone. Only the latest fixing can be undone. The accounting entries would be reversed. Option nominal would be reinstated but the underlying FX deal needs to be manually adjusted. */
        B_UNDO_FIXING : PT_Contract:SY_FX_FORWARDS__B_UNDO_FIXING
            @i18n:Label (en="Buy Undo Fixing")
            @i18n:Tooltip (en="Buy Undo Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=78.0, core=true, t24Name=B.UNDO.FIXING)
        /* Yes or No field. Yes indicates that knock out needs to be undone. The accounting entries would be reversed and option nominal would be reinstated. Underlying FX deal needs to be manually adjusted. */
        B_UNDO_KNOCKOUT : PT_Contract:SY_FX_FORWARDS__B_UNDO_KNOCKOUT
            @i18n:Label (en="Buy Undo Knock Out")
            @i18n:Tooltip (en="Buy Undo Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=79.0, core=true, t24Name=B.UNDO.KNOCKOUT)
        /* Contract currency is captured in this field. This would be the currency in which the contract would be valued in the portfolio. */
        CONTRACT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Contract Ccy")
            @i18n:Tooltip (en="Identifies the currency of the contract")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=12.0, core=true, businessType=CCY, t24Name=CONTRACT.CCY)
/* The status of the contract is updated in this field. When the contract is created , the status will be  'ACTIVE',  subsequently  as the contract undergoes various life cycle events, the status is updated as below.
ACTIVE - The  contract is active.
MATURED - The  contract is matured. i.e. the contract has completed its full life cycle.
KNOCKOUT - The contract is knocked out, i.e. the knock out barrier price is breached.
UNWOUND - The contract is terminated early - before the maturity date.

No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CONTRACT_STATUS : PT_Contract:SY_FX_FORWARDS__CONTRACT_STATUS
            @i18n:Label (en="Contract Status")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=3.0, core=true, t24Name=CONTRACT.STATUS)
/* The counterparty for the contract is  updated in this field. In the client trade, COUNTERPARTY would be the dealer book and it would be the external counterparty for the back to back or counterparty trade.
The counterparty should be defined in DX.CUSTOMER. Either counter party or customer should be a dealer book. No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        COUNTERPARTY -> DX_Customer:DX_CUSTOMER required
            @i18n:Label (en=Counterparty)
            @i18n:Tooltip (en="Counterparty with whom the deal is made")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=23.0, core=true, businessType=CUS, t24Name=COUNTERPARTY)
        /* This field needs to be set to 'Yes' in the street leg or counterparty deal. */
        COUNTERPARTY_TRADE : PT_Contract:SY_FX_FORWARDS__COUNTERPARTY_TRADE
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=29.0, core=true, t24Name=COUNTERPARTY.TRADE)
        CO_CODE -> ST_CompanyCreation:COMPANY
            @i18n:Label (en=Company)
            @t24:i (align=L, inputBehaviour=N, maxLength=11, sysNumber=213.0, core=true, businessType=A, t24Name=CO.CODE, mask="R##-###-####")
        /* Counterparty's account in CURRENCY.BOUGHT will be defaulted in this field. This field is mandatory if customer is not a dealer book and input is not allowed for a dealer book */
        CPARTY_BUY_CCY_ACCT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Counterparty Buy Currency Account")
            @i18n:Tooltip (en="Counterparty Buy Currency Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=27.0, core=true, businessType=ANT, t24Name=CPARTY.BUY.CCY.ACCT)
/* This field will hold the portfolio of the counterparty. If portfolio exist for the counterparty, then this field will be defaulted with the first portfolio of the counterparty. Not mandatory for counterparty trade.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CPARTY_PORTFOLIO -> SC_ScoPortfolioMaintenance:SEC_ACC_MASTER
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=24.0, core=true, businessType=SAM, t24Name=CPARTY.PORTFOLIO)
        /* Counterparty's account in CURRENCY.SOLD will be defaulted in this field. This field is mandatory if customer is not a dealer book and input is not allowed for a dealer book */
        CPARTY_SELL_CCY_ACCT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Counterparty Sell Currency Account")
            @i18n:Tooltip (en="Counterparty Sell Currency Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=28.0, core=true, businessType=ANT, t24Name=CPARTY.SELL.CCY.ACCT)
        /* This field holds the currency that the customer buys. */
        CURRENCY_BOUGHT -> ST_CurrencyConfig:CURRENCY required
            @i18n:Label (en="Buy Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=4.0, core=true, businessType=CCY, t24Name=CURRENCY.BOUGHT)
        /* This field holds the currency that the customer sells. */
        CURRENCY_SOLD -> ST_CurrencyConfig:CURRENCY required
            @i18n:Label (en="Sell Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=5.0, core=true, businessType=CCY, t24Name=CURRENCY.SOLD)
        CURR_NO : T24BusinessTypes:N
            @i18n:Label (en="Curr No")
            @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=209.0, core=true, t24Name=CURR.NO)
/* This field records the investor for this contract. For the client trade, this would be the customer, for the counterparty trade, this would be the DEALER.BOOK.
The customer should be defined in DX.CUSTOMER.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        CUSTOMER -> DX_Customer:DX_CUSTOMER required
            @i18n:Label (en=Customer)
            @i18n:Tooltip (en="Customer Liability")
            @t24:i (align=R, inputBehaviour=I, maxLength=10, sysNumber=21.0, core=true, businessType=CUS, t24Name=CUSTOMER)
        /* Customer's account in CURRENCY.BOUGHT will be defaulted in this field. This field is mandatory if customer is not a dealer book and input is not allowed for a dealer book. */
        CU_BUY_CCY_ACCT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Customer Buy Currency Account")
            @i18n:Tooltip (en="Customer Buy Currency Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=25.0, core=true, businessType=ANT, t24Name=CU.BUY.CCY.ACCT)
        /* Customer's account in CURRENCY.SOLD will be defaulted in this field. This field is mandatory if customer is not a dealer book and input is not allowed for a dealer book. */
        CU_SELL_CCY_ACCT -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Customer Sell Currency Account")
            @i18n:Tooltip (en="Customer Sell Currency Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=26.0, core=true, businessType=ANT, t24Name=CU.SELL.CCY.ACCT)
        DATE_TIME -> byValue PT_Contract:SY_FX_FORWARDS__DATE_TIME *
            @t24:i (t24Name=DATE.TIME)
/* This field is used in defaulting the fixing date if the fixing date generated by the fixing frequency falls on a holiday.

Allowed values -
'FWD' - Next working day will be defaulted.
'BWD' - Previous working day will be defaulted. */
        DAY_CONVENTION : PT_Contract:SY_FX_FORWARDS__DAY_CONVENTION
            @i18n:Label (en="Day Convention")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=8.0, core=true, t24Name=DAY.CONVENTION)
        /* This field will hold DEALER.DESK of the contract. The value given here will be mapped to SY.TRANSACTION. */
        DEALER_DESK : T24BusinessTypes:N
            @i18n:Label (en="Dealer Desk")
            @i18n:Tooltip (en="Specifies the Dealer Desk handling the transaction")
            @t24:i (align=R, inputBehaviour=I, maxLength=2, sysNumber=43.0, core=true, t24Name=DEALER.DESK)
        DEPT_CODE -> ST_Config:DEPT_ACCT_OFFICER
            @i18n:Label (en="Dept Code")
            @t24:i (align=R, inputBehaviour=N, maxLength=4, sysNumber=214.0, core=true, t24Name=DEPT.CODE)
        /* This is a free text field and can be used to record the description of the contract. */
        DESCRIPTION : T24BusinessTypes:TEXT
            @i18n:Label (en=Description)
            @i18n:Tooltip (en=Description)
            @t24:i (align=L, inputBehaviour=I, maxLength=100, sysNumber=2.0, core=true, t24Name=DESCRIPTION)
        /* This field will hold a valid DX.CONTRACT.MASTER ID. The underlying option trades would be booked with this contract master. The contract should have maturity type as daily and it should FXOTC option contract. */
        DX_CONTRACT_CODE -> DX_Configuration:DX_CONTRACT_MASTER required
            @i18n:Label (en="Dx contract Code")
            @i18n:Tooltip (en="Indicates the counterparty of the transaction")
            @t24:i (align=L, inputBehaviour=I, maxLength=12, sysNumber=11.0, core=true, businessType=DXCM, t24Name=DX.CONTRACT.CODE)
        /* External references such as a reference from an upstream system can be stored in this field. This used for information purposes. */
        EXTERNAL_REF : T24BusinessTypes:A
            @i18n:Label (en="External Referance")
            @i18n:Tooltip (en="External Referance")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=39.0, core=true, t24Name=EXTERNAL.REF)
        FEE_ACC -> AC_AccountOpening:ACCOUNT
            @t24:i (align=L, inputBehaviour=F, maxLength=36, sysNumber=48.0, core=true, businessType=ANT, t24Name=FEE.ACC)
        /* Fee amount for the transaction is captured in this field. This amount is denominated in the FEE.CCY and it is posted to the FEE.PL.CATEG defined in SY.PRODUCT.DEFINITION. */
        FEE_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Fee Amount")
            @i18n:Tooltip (en="Fee Amount")
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=47.0, core=true, t24Name=FEE.AMT, typeModifiers="-46D")
        /* The field will hold currency in which the fees will be collected */
        FEE_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Fee Currency")
            @i18n:Tooltip (en="Fee Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=46.0, core=true, businessType=CCY, t24Name=FEE.CCY)
/* This field will hold the final settlement date of the contract and it will be defaulted considering SPOT.DAY from FX.PARAMETERS and BUY.CCY.CALENDAR and SEL.CCY.CALENDAR of the contract.
Final settlement date can't be less than maturity date. No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        FINAL_SETT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Final settlement Date")
            @i18n:Tooltip (en="Final settlement Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=20.0, core=true, t24Name=FINAL.SETT.DATE)
        /* This field holds the FX Payout currency for the currency pair. The cash settlement would happen in this currency. Input allowed only when SETTLEMENT.METHOD is set to CASH */
        FX_PAYOUT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Fx Payout Currency ")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=45.0, core=true, businessType=CCY, t24Name=FX.PAYOUT.CCY)
        ID -> PT_Contract:SY_FX_FORWARDS PK required
            @i18n:Label (en="Transaction Ref")
            @i18n:Tooltip (en="Transaction Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=0.0, core=true, businessType=A, t24Name="@ID")
/* A value of 'BUY' in this field indicates that this contract includes a vanilla option component. The field will be defaulted from SY.PRODUCT.VARIANT if VARIANT is given else it will be defaulted from SY.PRODUCT.DEFINITION.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        INCL_VANILLA_OPTION : PT_Contract:SY_FX_FORWARDS__INCL_VANILLA_OPTION
            @i18n:Label (en="Include Vanilla Option")
            @i18n:Tooltip (en="Include Vanilla Option")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=10.0, core=true, t24Name=INCL.VANILLA.OPTION)
        INPUTTER -> byValue PT_Contract:SY_FX_FORWARDS__INPUTTER *
            @t24:i (t24Name=INPUTTER)
        /* Maturity date is the termination date of the contract.  Maturity date will be defaulted based on TERM and VALUE.DATE. Either TERM or MATURITY.DATE is mandatory. */
        MATURITY_DATE : T24BusinessTypes:D
            @i18n:Label (en="Maturity Date")
            @i18n:Tooltip (en="Indicates the Maturity Date of the Transaction")
            @t24:i (align=R, inputBehaviour=F, maxLength=11, sysNumber=19.0, core=true, t24Name=MATURITY.DATE)
        OVERRIDE -> byValue PT_Contract:SY_FX_FORWARDS__OVERRIDE *
            @t24:i (t24Name=OVERRIDE)
/* This field will hold the portfolio of the customer for this contract. When left blank, the first portfolio of the CUSTOMER will be defaulted.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        PORTFOLIO -> SC_ScoPortfolioMaintenance:SEC_ACC_MASTER
            @i18n:Label (en=Portfolio)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=22.0, core=true, businessType=SAM, t24Name=PORTFOLIO)
        /* The premium amount will be debited or credited to this account based on the value in PREMIUM.PAY.RECEIVE. */
        PREMIUM_ACC -> AC_AccountOpening:ACCOUNT
            @t24:i (align=L, inputBehaviour=F, maxLength=36, sysNumber=34.0, core=true, businessType=ANT, t24Name=PREMIUM.ACC)
        /* This field will hold the premium amount which has to be payed or received. Input allowed only if PREMIUM.PAY.RECEIVE is set. */
        PREMIUM_AMT : T24BusinessTypes:AMT
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=33.0, core=true, t24Name=PREMIUM.AMT, typeModifiers="-31D")
        /* This field will hold the currency in which premium is specified. Input allowed only if PREMIUM.PAY.RECEIVE is set. */
        PREMIUM_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Premium Currency")
            @i18n:Tooltip (en="Premium Currency")
            @t24:i (align=L, inputBehaviour=F, maxLength=3, sysNumber=31.0, core=true, businessType=CCY, t24Name=PREMIUM.CCY)
        /* This field will say whether the customer have to pay/receive the premium amount */
        PREMIUM_PAY_RECEIVE : PT_Contract:SY_FX_FORWARDS__PREMIUM_PAY_RECEIVE
            @i18n:Label (en="Premium Pay Receive")
            @i18n:Tooltip (en="Premium Pay Receive")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=30.0, core=true, t24Name=PREMIUM.PAY.RECEIVE)
        /* Premium price would be used to calculate the premium amount. Premium amount  = premium price * Notional amount. */
        PREMIUM_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Premium Price")
            @i18n:Tooltip (en="Premium Price")
            @t24:i (align=R, inputBehaviour=F, maxLength=19, sysNumber=32.0, core=true, t24Name=PREMIUM.PRICE)
        RECORD_STATUS : T24BusinessTypes:STAT
            @i18n:Label (en="Record Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=4, sysNumber=208.0, core=true, t24Name=RECORD.STATUS)
        RESERVED_01 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=171.0, core=true, t24Name=RESERVED.01)
        RESERVED_02 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=170.0, core=true, t24Name=RESERVED.02)
        RESERVED_03 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=169.0, core=true, t24Name=RESERVED.03)
        RESERVED_04 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=168.0, core=true, t24Name=RESERVED.04)
        RESERVED_05 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=167.0, core=true, t24Name=RESERVED.05)
        RESERVED_06 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=158.0, core=true, t24Name=RESERVED.06)
        RESERVED_07 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=157.0, core=true, t24Name=RESERVED.07)
        RESERVED_08 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=156.0, core=true, t24Name=RESERVED.08)
        RESERVED_09 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=155.0, core=true, t24Name=RESERVED.09)
        RESERVED_10 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=154.0, core=true, t24Name=RESERVED.10)
        RESERVED_11 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=138.0, core=true, t24Name=RESERVED.11)
        RESERVED_12 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=137.0, core=true, t24Name=RESERVED.12)
        RESERVED_13 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=136.0, core=true, t24Name=RESERVED.13)
        RESERVED_14 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=135.0, core=true, t24Name=RESERVED.14)
        RESERVED_15 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=134.0, core=true, t24Name=RESERVED.15)
        RESERVED_16 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=125.0, core=true, t24Name=RESERVED.16)
        RESERVED_17 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=124.0, core=true, t24Name=RESERVED.17)
        RESERVED_18 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=123.0, core=true, t24Name=RESERVED.18)
        RESERVED_19 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=122.0, core=true, t24Name=RESERVED.19)
        RESERVED_20 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=121.0, core=true, t24Name=RESERVED.20)
        RESERVED_21 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=98.0, core=true, t24Name=RESERVED.21)
        RESERVED_22 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=97.0, core=true, t24Name=RESERVED.22)
        RESERVED_23 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=96.0, core=true, t24Name=RESERVED.23)
        RESERVED_24 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=95.0, core=true, t24Name=RESERVED.24)
        RESERVED_25 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=94.0, core=true, t24Name=RESERVED.25)
        RESERVED_26 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=85.0, core=true, t24Name=RESERVED.26)
        RESERVED_27 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=84.0, core=true, t24Name=RESERVED.27)
        RESERVED_28 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=83.0, core=true, t24Name=RESERVED.28)
        RESERVED_29 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=82.0, core=true, t24Name=RESERVED.29)
        RESERVED_30 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=81.0, core=true, t24Name=RESERVED.30)
        RESERVED_31 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=58.0, core=true, t24Name=RESERVED.31)
        RESERVED_32 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=57.0, core=true, t24Name=RESERVED.32)
        RESERVED_33 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=56.0, core=true, t24Name=RESERVED.33)
        RESERVED_34 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=55.0, core=true, t24Name=RESERVED.34)
/* Running notional in CURRENCY.BOUGHT is updated in this field. While contract commences this field will be defaulted with Initial notional as updated in TOT.NOTIONAL.BUY.CCY
During the life cycle of the contract, the notional changes as the option gets exercised (i.e) as part of fixing, the notional amount for the remaining tenure is updated in this field.
If sell option is knocked out then remaining schedule call amount of buy and vanilla option will be updated in this field and on each fixing the notional amount will be reduced. */
        RUN_NOTIONAL_BUY_CCY : T24BusinessTypes:AMT
            @i18n:Label (en="Run Notional in Buy Currency")
            @i18n:Tooltip (en="Run Notional in Buy Currency")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=38.0, core=true, t24Name=RUN.NOTIONAL.BUY.CCY, typeModifiers="-4D")
/* Running notional in CURRENCY.SOLD is updated in this field. While contract commences this field will be defaulted with Initial notional amount as updated in TOT.NOTIONAL.SELL.CCY.
During the life cycle of the contract, the notional changes as the option gets exercised (i.e) as part of fixing, the notional amount for the remaining tenure is updated in this field.
If sell option is knocked out then remaining schedule put amount of buy and vanilla option will be updated in this field and on each fixing the notional amount will be reduced. */
        RUN_NOTIONAL_SELL_CCY : T24BusinessTypes:AMT
            @i18n:Label (en="Run Notional in Sell Currency")
            @i18n:Tooltip (en="Run Notional in Sell Currency")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=37.0, core=true, t24Name=RUN.NOTIONAL.SELL.CCY, typeModifiers="-5D")
        SEL_CCY_CALENDAR : T24BusinessTypes:A
            @i18n:Label (en="Sell Currency Calendar")
            @i18n:Tooltip (en="Sell Currency Calendar")
            @t24:i (align=L, inputBehaviour=F, maxLength=4, sysNumber=7.0, core=true, t24Name=SEL.CCY.CALENDAR)
/* This field will hold the settlement method  of the underlying option. The underlying option can be cash settled or physically settled. The field will be defaulted from DX.CONTRACT.MASTER.
For physical settlement, at the time of exercise, an FX spot deal would be generated. For cash settlement, a cash entry would be generated for the cash difference between the spot exchange rate and strike exchange rate. */
        SETTLEMENT_METHOD : T24BusinessTypes:A
            @i18n:Label (en="Setltement Method ")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=44.0, core=true, t24Name=SETTLEMENT.METHOD)
        /* The current exchange rate between CURRENCY.BOUGHT and CURRENCY.SOLD is captured here for reference. */
        SPOT_PRICE : T24BusinessTypes:PRICE
            @i18n:Label (en="Spot Price")
            @t24:i (align=L, inputBehaviour=I, maxLength=16, sysNumber=13.0, core=true, t24Name=SPOT.PRICE)
        STMT_NOS -> byValue PT_Contract:SY_FX_FORWARDS__STMT_NOS *
            @t24:i (t24Name=STMT.NOS)
/* If this field is set to 'Yes',  system will not create the underlying transactions when the contract is committed. It is expected that the underlying transactions will be created manually or interfaced from a different system and the contract can be linked to FSFORWARDS using SY.DX.REFERENCE.
For such contracts, life cycle events of the contract such as fixing undo fixing etc. should be managed externally (Manually or interfaced from an external system).
If this field is set to 'No', underlying transactions will be created by the system. The life cycle events of the contract will be processed by the system.
This field will be defaulted from SY.PRODUCT.VARIANT. If SY.PRODUCT.VARIANT is not defined, then the value will be defaulted from SY.PRODUCT.DEFINITION.
The option fields which are involved in creating the underlying DX.TRADES's would be made "No Change" if SUPPRESS.UNDERLYING field is set to 'No' */
        SUPPRESS_UNDERLYING : PT_Contract:SY_FX_FORWARDS__SUPPRESS_UNDERLYING
            @i18n:Label (en="Suppress Underlying")
            @i18n:Tooltip (en="Suppress Underlying")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=9.0, core=true, t24Name=SUPPRESS.UNDERLYING)
/* This is the  unique reference that will bind the structure (FXFORWARDS contract) with all its underlying transactions.
For example, when an SY.FX.FORWARDS contract is created, the underlying option is created in DX.TRADE. As the contract gets fixed (periodic settlement), the settlement happens through a FOREX transaction. All three transactions , SY.FX.FORWARDS contract, DX.TRADE and FOREX will be updated with this reference.
This reference can be input by user, if left blank, the contract id would be populated */
        SY_DX_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="SY DX Reference")
            @i18n:Tooltip (en="SY DX Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=40.0, core=true, t24Name=SY.DX.REFERENCE)
        /* The Call amount (amount bought ) is updated in this field. If the S.CALL.CCY is equl to BASE.CCY,  user needs to input the amount, otherwise system will derive the amount from S.PUT.AMT and S.STRIKE.PRICE. */
        S_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Call Amount")
            @i18n:Tooltip (en="Sell Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=103.0, core=true, t24Name=S.CALL.AMT)
        /* This field hold the call currency of the sell option. This will be populated with CURRENCY.SOLD. */
        S_CALL_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Sell Call Currency")
            @i18n:Tooltip (en="Sell Call Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=102.0, core=true, businessType=CCY, t24Name=S.CALL.CCY)
        /* This field needs to be set to 'Yes', if the S.CALL.AMT and S.PUT.AMT is not constant for all fixing periods.  Once the flag is set , the user can change the amount for specific fixings. */
        S_DIFFERENT_AMT : PT_Contract:SY_FX_FORWARDS__S_DIFFERENT_AMT
            @i18n:Label (en="Sell Different Amount")
            @i18n:Tooltip (en="Sell Different Amount")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=106.0, core=true, t24Name=S.DIFFERENT.AMT)
        /* This field will hold the reference of the underlying sell option contract (DX.TRADE ID). */
        S_DX_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="Sell DX Trade Reference")
            @i18n:Tooltip (en="Sell DX Trade Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=120.0, core=true, t24Name=S.DX.REFERENCE)
        S_FIXING_DATE -> byValue PT_Contract:SY_FX_FORWARDS__S_FIXING_DATE *
            @t24:i (t24Name=S.FIXING.DATE)
/* This field can be used to specify the fixing frequency for the sell option. Based on the fixing frequency, the fixing schedule will be generated.
The exercise or expiration of the underlying option would happen on the respective S.FIXING.DATE. */
        S_FIXING_FREQUENCY : T24BusinessTypes:FQU
            @i18n:Label (en="Sell Fixing Frequency")
            @i18n:Tooltip (en="Sell Fixing Frequency")
            @t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=107.0, core=true, t24Name=S.FIXING.FREQUENCY, mask="RDDDD DD  DD #####")
/* This field will hold the number of fixing periods in the sell option life cycle. This field is optional field, if given then specified number of fixing cycles will be generated and the last fixing cycle will be defaulted as maturity date.
If the number of periods is not mentioned then based on the MATURITY.DATE the fixing cycles will be populated. */
        S_FIXING_PERIODS : T24BusinessTypes:N
            @i18n:Label (en="Sell Fixing Periods")
            @i18n:Tooltip (en="Sell Fixing Periods")
            @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=108.0, core=true, t24Name=S.FIXING.PERIODS)
        /* If this field is not null, then the option would be deemed to have a knock in barrier. Only when S.KNOCK.IN is set to yes then the option can be exercised. */
        S_KNOCKIN_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Knock In Price")
            @i18n:Tooltip (en="Sell Knock In Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=113.0, core=true, t24Name=S.KNOCKIN.PRICE)
        /* For the TARKO variant , the target redemption (accumulated intrinsic value of the contract) is captured in this field. */
        S_KNOCKOUT_INTRINSIC : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Knock Out Intrinsic Value")
            @i18n:Tooltip (en="Sell Knock Out Intrinsic Value")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=116.0, core=true, t24Name=S.KNOCKOUT.INTRINSIC)
        /* The Knock out barrier price field can be defined in this field. */
        S_KNOCKOUT_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Knock Out Price")
            @i18n:Tooltip (en="Sell Knock Out Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=115.0, core=true, t24Name=S.KNOCKOUT.PRICE)
        /* When this field is set to 'Yes', it indicates to the system that the sell option is knocked in. If there is a 'S.KNOCKIN.PRICE' defined, then this field needs to be set to 'Yes' , before the option can be exercised. */
        S_KNOCK_IN : PT_Contract:SY_FX_FORWARDS__S_KNOCK_IN
            @i18n:Label (en="Sell Knock In")
            @i18n:Tooltip (en="Sell Knock In")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=112.0, core=true, t24Name=S.KNOCK.IN)
        /* When this field is set to 'Yes', it indicates to the system that the sell option is knocked out. Once it is Knocked out, the option cannot be exercised. */
        S_KNOCK_OUT : PT_Contract:SY_FX_FORWARDS__S_KNOCK_OUT
            @i18n:Label (en="Sell Knock Out")
            @i18n:Tooltip (en="Sell Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=114.0, core=true, t24Name=S.KNOCK.OUT)
        /* The field holds the maturity date of the sell option and it should not be greater than MATURITY.DATE of the contract. The last FIXING.DATE of the option will be defaulted to MATURITY.DATE. */
        S_MATURITY_DATE : T24BusinessTypes:D
            @i18n:Label (en="Sell Maturity Date")
            @i18n:Tooltip (en="Sell Maturity Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=109.0, core=true, t24Name=S.MATURITY.DATE)
        /* This field holds the option style for the sell option. OPTION.STYLE will be defaulted from DX.CONTRACT.MASTER. Allowed values are 'AMERICAN', 'EUROPEAN','CARRIBEAN'. */
        S_OPTION_STYLE : PT_Contract:SY_FX_FORWARDS__S_OPTION_STYLE
            @i18n:Label (en="Sell Option Style")
            @i18n:Tooltip (en="Sell Option Style")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=99.0, core=true, t24Name=S.OPTION.STYLE)
        /* This field will say the option type of the underlying sell option that is getting created. The value will be defaulted to 'PUT'. */
        S_OPTION_TYPE : PT_Contract:SY_FX_FORWARDS__S_OPTION_TYPE
            @i18n:Label (en="Sell Option Type")
            @i18n:Tooltip (en="Sell Option Type")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=100.0, core=true, t24Name=S.OPTION.TYPE)
        /* The put amount (amount sold) is updated in this field. If S.PUT.CCY is equal to BASE.CCY, user need to input the value, otherwise the value is derived by the system from S.CALL.AMT and S.STRIKE.PRICE. */
        S_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Put Amount")
            @i18n:Tooltip (en="Sell Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=105.0, core=true, t24Name=S.PUT.AMT)
        /* This field holds the put currency of the sell option. The value in CURRENCY.BOUGHT is updated in this field. */
        S_PUT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Sell Put Currency")
            @i18n:Tooltip (en="Sell Put Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=104.0, core=true, businessType=CCY, t24Name=S.PUT.CCY)
        /* When this field is set to 'Yes', and  S.KNOCKOUT is set to 'Yes', then the current fixing is effected before the option is knocked out. */
        S_RUN_CURRENT_FIXING : PT_Contract:SY_FX_FORWARDS__S_RUN_CURRENT_FIXING
            @i18n:Label (en="Sell Run Current Fixing")
            @i18n:Tooltip (en="Sell Run Current Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=117.0, core=true, t24Name=S.RUN.CURRENT.FIXING)
        /* Strike price for the sell option is keyed in this field. */
        S_STRIKE_PRICE : T24BusinessTypes:AMT required
            @i18n:Label (en="Sell Strike Price")
            @i18n:Tooltip (en="Sell Strike Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=101.0, core=true, t24Name=S.STRIKE.PRICE)
        /* This field holds the total amount of currency bought for the sell option. This would be sum of the call amount(S.SCHEDULE.CALL.AMT) for each fixing. */
        S_TOTAL_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Total Call Amount")
            @i18n:Tooltip (en="Sell Total Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=110.0, core=true, t24Name=S.TOTAL.CALL.AMT)
        /* This field holds the total amount of the currency sold for the sell option. This woulld be sum of the put amount(S.SCHEDULE.PUT.AMT) for each fixing. */
        S_TOTAL_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Total Put Amount")
            @i18n:Tooltip (en="Sell Total Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=111.0, core=true, t24Name=S.TOTAL.PUT.AMT)
        /* Yes or No field. Yes Indicates that fixing needs to be undone. Only the latest fixing can be undone. The accounting entries would be reversed. Option nominal would be reinstated but the underlying FX deal needs to be manually adjusted. */
        S_UNDO_FIXING : PT_Contract:SY_FX_FORWARDS__S_UNDO_FIXING
            @i18n:Label (en="Sell Undo Fixing")
            @i18n:Tooltip (en="Sell Undo Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=118.0, core=true, t24Name=S.UNDO.FIXING)
        /* Yes or No field. Yes indicates that knock out needs to be undone. The accounting entries would be reversed and option nominal would be reinstated. Underlying FX deal needs to be manually adjusted. */
        S_UNDO_KNOCKOUT : PT_Contract:SY_FX_FORWARDS__S_UNDO_KNOCKOUT
            @i18n:Label (en="Sell Undo Knock Out")
            @i18n:Tooltip (en="Sell Undo Knock Out")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=119.0, core=true, t24Name=S.UNDO.KNOCKOUT)
        /* This field holds the tenor of the contract. The Tenor can be expressed as a number of Days, Weeks or Months. Input in this field has to be in the format nnnD, nnnM or nnnW where nnn is represents the numeric component. D signifies Days (working days) ,M signifies Months and W signifies Weeks */
        TERM : T24BusinessTypes:A
            @i18n:Label (en=Term)
            @i18n:Tooltip (en="period of time by which the amount must be repaid")
            @t24:i (align=L, inputBehaviour=I, maxLength=4, sysNumber=18.0, core=true, t24Name=TERM)
        /* This field holds the notional amount in the CURRENCY.BOUGHT. Calculated as sum of S.TOTAL.PUT.AMT and VB.TOTAL.CALL.AMT multivalue fields. */
        TOT_NOTIONAL_BUY_CCY : T24BusinessTypes:AMT
            @i18n:Label (en="Total Notional in Buy Currency")
            @i18n:Tooltip (en="Total Notional in Buy Currency")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=36.0, core=true, t24Name=TOT.NOTIONAL.BUY.CCY, typeModifiers="-4D")
        /* This field holds the notional amount in CURRENCY.SOLD. Calculated as sum of S.TOTAL.CALL.AMT and VB.TOTAL.PUT.AMOUNT multivalue fields. */
        TOT_NOTIONAL_SELL_CCY : T24BusinessTypes:AMT
            @i18n:Label (en="Total Notional in Sell Currency")
            @i18n:Tooltip (en="Total Notional in Sell Currency")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=35.0, core=true, t24Name=TOT.NOTIONAL.SELL.CCY, typeModifiers="-5D")
/* Holds the trade date of the contract. Trade date cannot be forward dated and should fall between the FIRST.DATE and LAST.DATE of the corresponding product definition record.
The date given should be working day in BUY.CCY.CALENDAR and SEL.CCY.CALENDAR. No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        TRADE_DATE : T24BusinessTypes:D
            @i18n:Label (en="Trade Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=15.0, core=true, t24Name=TRADE.DATE)
/* This field will be defaulted with TRADE time.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        TRADE_TIME : T24BusinessTypes:TIME
            @i18n:Label (en="Trade Time")
            @i18n:Tooltip (en="Indicate the time trade was executed")
            @t24:i (align=L, inputBehaviour=I, maxLength=11, sysNumber=16.0, core=true, t24Name=TRADE.TIME)
        /* This field will hold SY.TRANSACTION ID. No input field. */
        TRANSACTION_REF : T24BusinessTypes:A
            @i18n:Label (en="Transaction Ref")
            @i18n:Tooltip (en="Transaction Reference")
            @t24:i (align=L, inputBehaviour=N, maxLength=16, sysNumber=42.0, core=true, t24Name=TRANSACTION.REF)
/* The contract can be pre-closed or terminated before the maturity date. Early closure is also referred to as "Unwinding" of the contract.
A penalty charge (unwind charge) can also be applied for early termination. */
        UNWIND : PT_Contract:SY_FX_FORWARDS__UNWIND
            @i18n:Label (en=Unwind)
            @i18n:Tooltip (en=Unwind)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=49.0, core=true, t24Name=UNWIND)
        /* The unwinding charges would be collected from this account. The account should be in the currency specified in UNWIND.CHG.CCY */
        UNWIND_CHG_ACC -> AC_AccountOpening:ACCOUNT
            @i18n:Label (en="Unwind Charge Account")
            @i18n:Tooltip (en="Unwind Charge Account")
            @t24:i (align=L, inputBehaviour=I, maxLength=36, sysNumber=52.0, core=true, businessType=ANT, t24Name=UNWIND.CHG.ACC)
        /* Early termination or unwind may attract a  penalty charge (known as unwind charge). The penalty amount can be input in this field. */
        UNWIND_CHG_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Unwind Charge Amount")
            @i18n:Tooltip (en="Unwind Charge Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=51.0, core=true, t24Name=UNWIND.CHG.AMT, typeModifiers="-50D")
        /* This field will record the currency in which unwind charge be collected. */
        UNWIND_CHG_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Unwind Charge Currency")
            @i18n:Tooltip (en="Unwind Charge Currency")
            @t24:i (align=L, inputBehaviour=I, maxLength=3, sysNumber=50.0, core=true, businessType=CCY, t24Name=UNWIND.CHG.CCY)
        /* This field holds the effective date for 'Unwind'. Defaults to 'Today'.  Cannot be changed once authorized. */
        UNWIND_EFF_DATE : T24BusinessTypes:D
            @i18n:Label (en="Unwind Effective Date")
            @i18n:Tooltip (en="Unwind Effective Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=53.0, core=true, t24Name=UNWIND.EFF.DATE)
/* This field will hold the value date of the contract and it will be defaulted considering BUY.CCY.CALENDAR and SEL.CCY.CALENDAR of the contract. Value date cannot be earlier than the trade date.
No change field if SUPPRESS.UNDERLYING is set to 'No'. */
        VALUE_DATE : T24BusinessTypes:D
            @i18n:Label (en="Value Date")
            @i18n:Tooltip (en="Indicates the Value date of the Contract")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=17.0, core=true, t24Name=VALUE.DATE)
/* If the contract refers to a particular variant, then the variant can be linked in this field. Once linked, the parameters and configurations defined for the variant would be used in processing the life cycle of the contract.
If this field is NULL, the parameters defined in SY.PRODUCT.DEFINTION for FXFORWARDS would be applied.
No change field if SUPPRESS.UNDERLYING is set to 'No'.
Validation Rules:
Only variants with prefix as 'FXFORWARDS_' will be accepted. */
        VARIANT -> SY_Config:SY_PRODUCT_VARIANT
            @i18n:Label (en=Variant)
            @i18n:Tooltip (en=Variant)
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=1.0, core=true, businessType=ANY, t24Name=VARIANT)
        /* The Call amount (amount bought ) is updated in this field. If the VB.CALL.CCY is equl to BASE.CCY, user needs to input the amount, otherwise system will derive the amount from VB.PUT.AMT and VB.STRIKE.PRICE. */
        VB_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Call Amount")
            @i18n:Tooltip (en="Vanilla Buy Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=143.0, core=true, t24Name=VB.CALL.AMT)
        /* This field hold the call currency of the vanilla option. This will be populated with CURRENCY.BOUGHT */
        VB_CALL_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Vanilla Buy Call Currency")
            @i18n:Tooltip (en="Vanilla Buy Call Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=142.0, core=true, businessType=CCY, t24Name=VB.CALL.CCY)
        /* This field needs to be set to 'Yes', if the VB.CALL.AMT and VB.PUT.AMT is not constant for all fixing periods.  Once the flag is set , the user can change the amount for specific fixings. */
        VB_DIFFERENT_AMT : PT_Contract:SY_FX_FORWARDS__VB_DIFFERENT_AMT
            @i18n:Label (en="Vanilla Buy Different Amount")
            @i18n:Tooltip (en="Vanilla Buy Different Amount")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=146.0, core=true, t24Name=VB.DIFFERENT.AMT)
        /* This field will hold the reference of the underlying buy option contract (DX.TRADE ID). */
        VB_DX_REFERENCE : T24BusinessTypes:A
            @i18n:Label (en="Vanilla Buy DX Trade Reference")
            @i18n:Tooltip (en="Vanilla Buy DX Trade Reference")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=153.0, core=true, t24Name=VB.DX.REFERENCE)
        VB_FIXING_DATE -> byValue PT_Contract:SY_FX_FORWARDS__VB_FIXING_DATE *
            @t24:i (t24Name=VB.FIXING.DATE)
/* This field can be used to specify the fixing frequency for the vanilla option. Based on the fixing frequency, the fixing schedule will be generated.
The exercise or expiration of the underlying option would happen on the respective VB.FIXING.DATE. */
        VB_FIXING_FREQUENCY : T24BusinessTypes:FQU
            @i18n:Label (en="Vanilla Buy Fixing Frequency")
            @i18n:Tooltip (en="Vanilla Buy Fixing Frequency")
            @t24:i (align=L, inputBehaviour=I, maxLength=17, sysNumber=147.0, core=true, t24Name=VB.FIXING.FREQUENCY, mask="RDDDD DD  DD #####")
/* This field will hold the number of fixing periods in the vanilla buy option life cycle. This field is optional field, if given then specified number of fixing cycles will be generated and the last fixing cycle will be defaulted as maturity date.
If the number of periods is not mentioned then based on the MATURITY.DATE the fixing cycles will be populated. */
        VB_FIXING_PERIODS : T24BusinessTypes:N
            @i18n:Label (en="Vanilla Buy Fixing Periods")
            @i18n:Tooltip (en="Vanilla Buy Fixing Periods")
            @t24:i (align=R, inputBehaviour=I, maxLength=3, sysNumber=148.0, core=true, t24Name=VB.FIXING.PERIODS)
        /* The field holds the maturity date of  the vanilla buy option and it should not be greater than MATURITY.DATE of the contract. The last FIXING.DATE of the option will be defaulted to MATURITY.DATE. */
        VB_MATURITY_DATE : T24BusinessTypes:D
            @i18n:Label (en="Vanilla Buy Maturity Date")
            @i18n:Tooltip (en="Vanilla Buy Maturity Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=149.0, core=true, t24Name=VB.MATURITY.DATE)
        /* OPTION.STYLE will be defaulted from DX.CONTRACT.MASTER. This field is for information purpose. */
        VB_OPTION_STYLE : PT_Contract:SY_FX_FORWARDS__VB_OPTION_STYLE
            @i18n:Label (en="Vanilla Buy Option Style")
            @i18n:Tooltip (en="Vanilla Buy Option Style")
            @t24:i (align=L, inputBehaviour=F, maxLength=35, sysNumber=139.0, core=true, t24Name=VB.OPTION.STYLE)
        /* This field holds the option style for the vanilla buy option. OPTION.STYLE will be defaulted from DX.CONTRACT.MASTER. Allowed values are 'AMERICAN', 'EUROPEAN','CARRIBEAN'. */
        VB_OPTION_TYPE : PT_Contract:SY_FX_FORWARDS__VB_OPTION_TYPE
            @i18n:Label (en="Vanilla Buy Option Type")
            @i18n:Tooltip (en="Vanilla Buy Option Type")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=140.0, core=true, t24Name=VB.OPTION.TYPE)
        /* The put amount (amount sold) is updated in this field. If VB.PUT.CCY is equal to BASE.CCY, user need to input the value, otherwise the value is derived by the system from VB.CALL.AMT and VB.STRIKE.PRICE. */
        VB_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Put Amount")
            @i18n:Tooltip (en="Vanilla Buy Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=145.0, core=true, t24Name=VB.PUT.AMT)
        /* This field holds the put currency of the buy option. The value in CURRENCY.SOLD is updated in this field. */
        VB_PUT_CCY -> ST_CurrencyConfig:CURRENCY
            @i18n:Label (en="Vanilla Buy Put Currency")
            @i18n:Tooltip (en="Vanilla Buy Put Currency")
            @t24:i (align=L, inputBehaviour=N, maxLength=3, sysNumber=144.0, core=true, businessType=CCY, t24Name=VB.PUT.CCY)
        /* Strike price for the vanilla option is keyed in this field. */
        VB_STRIKE_PRICE : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Strike Price")
            @i18n:Tooltip (en="Vanilla Buy Strike Price")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=141.0, core=true, t24Name=VB.STRIKE.PRICE)
        /* This field holds the total amount of currency bought for the vanilla option. This would be sum of the call amount(VB.SCHEDULE.CALL.AMT) for each fixing. */
        VB_TOTAL_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Total Call Amount")
            @i18n:Tooltip (en="Vanilla Buy Total Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=150.0, core=true, t24Name=VB.TOTAL.CALL.AMT)
        /* This field holds the total amount of the currency sold for the vanilla option. This woulld be sum of the put amount(VB.SCHEDULE.PUT.AMT) for each fixing. */
        VB_TOTAL_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Total Put Amount")
            @i18n:Tooltip (en="Vanilla Buy Total Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=151.0, core=true, t24Name=VB.TOTAL.PUT.AMT)
        /* Yes or No field. Yes Indicates that fixing needs to be undone. Only the latest fixing can be undone. The accounting entries would be reversed. Option nominal would be reinstated but the underlying FX deal needs to be manually adjusted. */
        VB_UNDO_FIXING : PT_Contract:SY_FX_FORWARDS__VB_UNDO_FIXING
            @i18n:Label (en="Vanilla Buy Undo Fixing")
            @i18n:Tooltip (en="Vanilla Buy Undo Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=152.0, core=true, t24Name=VB.UNDO.FIXING)
        VS_RESERVED_01 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=204.0, core=true, t24Name=VS.RESERVED.01)
        VS_RESERVED_02 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=203.0, core=true, t24Name=VS.RESERVED.02)
        VS_RESERVED_03 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=202.0, core=true, t24Name=VS.RESERVED.03)
        VS_RESERVED_04 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=201.0, core=true, t24Name=VS.RESERVED.04)
        VS_RESERVED_05 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=200.0, core=true, t24Name=VS.RESERVED.05)
        VS_RESERVED_06 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=199.0, core=true, t24Name=VS.RESERVED.06)
        VS_RESERVED_07 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=198.0, core=true, t24Name=VS.RESERVED.07)
        VS_RESERVED_08 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=197.0, core=true, t24Name=VS.RESERVED.08)
        VS_RESERVED_09 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=196.0, core=true, t24Name=VS.RESERVED.09)
        VS_RESERVED_10 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=195.0, core=true, t24Name=VS.RESERVED.10)
        VS_RESERVED_11 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=194.0, core=true, t24Name=VS.RESERVED.11)
        VS_RESERVED_12 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=193.0, core=true, t24Name=VS.RESERVED.12)
        VS_RESERVED_13 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=192.0, core=true, t24Name=VS.RESERVED.13)
        VS_RESERVED_14 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=191.0, core=true, t24Name=VS.RESERVED.14)
        VS_RESERVED_15 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=190.0, core=true, t24Name=VS.RESERVED.15)
        VS_RESERVED_16 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=189.0, core=true, t24Name=VS.RESERVED.16)
        VS_RESERVED_17 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=188.0, core=true, t24Name=VS.RESERVED.17)
        VS_RESERVED_18 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=187.0, core=true, t24Name=VS.RESERVED.18)
        VS_RESERVED_19 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=186.0, core=true, t24Name=VS.RESERVED.19)
        VS_RESERVED_20 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=185.0, core=true, t24Name=VS.RESERVED.20)
        VS_RESERVED_21 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=184.0, core=true, t24Name=VS.RESERVED.21)
        VS_RESERVED_22 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=183.0, core=true, t24Name=VS.RESERVED.22)
        VS_RESERVED_23 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=182.0, core=true, t24Name=VS.RESERVED.23)
        VS_RESERVED_24 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=181.0, core=true, t24Name=VS.RESERVED.24)
        VS_RESERVED_25 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=180.0, core=true, t24Name=VS.RESERVED.25)
        VS_RESERVED_26 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=179.0, core=true, t24Name=VS.RESERVED.26)
        VS_RESERVED_27 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=178.0, core=true, t24Name=VS.RESERVED.27)
        VS_RESERVED_28 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=177.0, core=true, t24Name=VS.RESERVED.28)
        VS_RESERVED_29 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=176.0, core=true, t24Name=VS.RESERVED.29)
        VS_RESERVED_30 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=175.0, core=true, t24Name=VS.RESERVED.30)
        VS_RESERVED_31 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=174.0, core=true, t24Name=VS.RESERVED.31)
        VS_RESERVED_32 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=173.0, core=true, t24Name=VS.RESERVED.32)
        VS_RESERVED_33 : T24BusinessTypes:N
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=172.0, core=true, t24Name=VS.RESERVED.33)
    }
    SY_FX_FORWARDS__B_FIXING_DATE
    {
        B_FIXED_STATUS : PT_Contract:SY_FX_FORWARDS__B_FIXING_DATE__B_FIXED_STATUS
            @i18n:Label (en="Buy Fixed Status")
            @i18n:Tooltip (en="Buy Fixed Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=93.0, core=true, t24Name=B.FIXED.STATUS)
/* This field holds the trigger to exercise or expire the buy option. When set to 'Exercise', the underlying buy option is exercised. When set to 'Expire', the underlying option would be expired.
This trigger needs to be updated by the user,  and if this field is left blank, the fixing event will not run. */
        B_FIXING : PT_Contract:SY_FX_FORWARDS__B_FIXING_DATE__B_FIXING
            @i18n:Label (en="Buy Fixing")
            @i18n:Tooltip (en="Buy Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=92.0, core=true, t24Name=B.FIXING)
/* The fields from the B.FIXING.DATE to B.FIXING.STATUS are part of a multi value set. The value in this field will be populated based on the FIXING.FREQUENCY and FIXING.PERIODS.
The first fixing date can't be greater than B.MATURITY.DATE and also the final fixing date should  always be equal to B.MATURITY.DATE.
The fixing date will be populated considering BUY.CCY.CALENDAR, SEL.CCY.CALENDAR and the local region. */
        B_FIXING_DATE : T24BusinessTypes:D
            @i18n:Label (en="Buy Fixing date")
            @i18n:Tooltip (en="Buy Fixing date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=86.0, core=true, t24Name=B.FIXING.DATE)
/* This field holds the call amount for this fixing period. This will default from B.CALL.AMT and can be modified if B.DIFFERENT.AMT is set to 'Yes'.
When the option is knocked out(B.KNOCKOUT is set to yes) then for the this period, the B.SCHEDULE.CALL.AMT can be adjusted to cater to TARKO variants such as adjusted strike TARKO.
In such cases, for the fixing period in which the knock out occured, the B.SCHEDULE.CALL.AMT and B.SCHEDULE.PUT.AMT need not be based on the B.STRIKE.PRICE. */
        B_SCHEDULE_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Schedule Call Amount")
            @i18n:Tooltip (en="Buy Schedule Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=88.0, core=true, t24Name=B.SCHEDULE.CALL.AMT)
/* This field holds the put amount for this fixing period. This will default from B.PUT.AMT and can be modified if B.DIFFERENT.AMT is set to 'Yes'.
When the option is knocked out(B.KNOCKOUT is set to yes) then for the this period, the B.SCHEDULE.PUT.AMT can be adjusted to cater to TARKO variants such as adjusted strike TARKO.
In such cases, for the fixing period in which the knock out occured, the B.SCHEDULE.CALL.AMT and B.SCHEDULE.PUT.AMT need not be based on the B.STRIKE.PRICE. */
        B_SCHEDULE_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Schedule Put Amount")
            @i18n:Tooltip (en="Buy Schedule Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=89.0, core=true, t24Name=B.SCHEDULE.PUT.AMT)
        /* If the contract is cash settled, then the value in the field will be settled. This field will not be calculated automatically, and the field is mandatory for cash settlement. */
        B_SETTLEMENT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Buy Settlement Amount")
            @i18n:Tooltip (en="Buy Settlement Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=91.0, core=true, t24Name=B.SETTLEMENT.AMT)
        /* For each fixing date the settlement date will be populated considering the spot days and spot currency defined in FX.PARAMETERS along with BUY.CCY.CALENDAR and SEL.CCY.CALENDAR defined in the contract. */
        B_SETTLEMENT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Buy Settlement Date")
            @i18n:Tooltip (en="Buy Settlement Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=87.0, core=true, t24Name=B.SETTLEMENT.DATE)
        /* This field holds the spot exchange rate at the time of fixing. This field would be used to calculate the settlement amount for cash settled contracts. */
        B_SPOT_EXCHANGE_RATE : T24BusinessTypes:R
            @i18n:Label (en="Buy Spot Exchange Rate")
            @i18n:Tooltip (en="Buy Spot Exchange Rate")
            @t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=90.0, core=true, t24Name=B.SPOT.EXCHANGE.RATE)
    }
    SY_FX_FORWARDS__DATE_TIME
    {
        DATE_TIME : T24BusinessTypes:RELTIME
            @i18n:Label (en="Date time")
            @i18n:Tooltip (en="Date and time when record was input or authorised")
            @t24:i (align=L, inputBehaviour=N, maxLength=15, sysNumber=211.0, core=true, t24Name=DATE.TIME, mask="RDD DD  DD ##:##")
    }
    SY_FX_FORWARDS__INPUTTER
    {
        INPUTTER : T24BusinessTypes:A
            @i18n:Label (en=Inputter)
            @i18n:Tooltip (en="The user who last updated the record")
            @t24:i (align=L, inputBehaviour=N, maxLength=40, sysNumber=210.0, core=true, t24Name=INPUTTER)
    }
    SY_FX_FORWARDS__OVERRIDE
    {
        OVERRIDE : T24BusinessTypes:N
            @i18n:Label (en=Override)
            @i18n:Tooltip (en="Overrides generated by this transaction")
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=207.0, core=true, t24Name=OVERRIDE)
    }
    SY_FX_FORWARDS__STMT_NOS
    {
        /* Standard T24 statement number field */
        STMT_NOS : T24BusinessTypes:N
            @i18n:Label (en="Stmt Nos")
            @i18n:Tooltip (en="Stmt Nos")
            @t24:i (align=R, inputBehaviour=N, maxLength=35, sysNumber=206.0, core=true, t24Name=STMT.NOS)
    }
    SY_FX_FORWARDS__S_FIXING_DATE
    {
        S_FIXED_STATUS : PT_Contract:SY_FX_FORWARDS__S_FIXING_DATE__S_FIXED_STATUS
            @i18n:Label (en="Sell Fixed Status")
            @i18n:Tooltip (en="Sell Fixed Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=133.0, core=true, t24Name=S.FIXED.STATUS)
/* This field holds the trigger to exercise or expire the sell option. When set to 'Exercise', the underlying sell option is exercised. When set to 'Expire', the underlying option would be expired.
This trigger needs to be updated by the user,  and if this field is left blank, the fixing event will not run. */
        S_FIXING : PT_Contract:SY_FX_FORWARDS__S_FIXING_DATE__S_FIXING
            @i18n:Label (en="Sell Fixing")
            @i18n:Tooltip (en="Sell Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=132.0, core=true, t24Name=S.FIXING)
/* The fields from the S.FIXING.DATE to S.FIXING.STATUS are part of a multi value set. The value in this field will be populated based on the FIXING.FREQUENCY and FIXING.PERIODS.
The first fixing date can't be greater than S.MATURITY.DATE and also the final fixing date should  always be equal to S.MATURITY.DATE.
The fixing date will be populated considering BUY.CCY.CALENDAR, SEL.CCY.CALENDAR and the local region. */
        S_FIXING_DATE : T24BusinessTypes:D
            @i18n:Label (en="Sell Fixing date")
            @i18n:Tooltip (en="Sell Fixing date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=126.0, core=true, t24Name=S.FIXING.DATE)
/* This field holds the call amount for this fixing period. This will default from S.CALL.AMT and can be modified if S.DIFFERENT.AMT is set to 'Yes'.
When the option is knocked out(S.KNOCKOUT is set to yes) then for the this period, the S.SCHEDULE.CALL.AMT can be adjusted to cater to TARKO variants such as adjusted strike TARKO.
In such cases, for the fixing period in which the knock out occured, the S.SCHEDULE.CALL.AMT and S.SCHEDULE.PUT.AMT need not be based on the S.STRIKE.PRICE. */
        S_SCHEDULE_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Schedule Call Amount")
            @i18n:Tooltip (en="Sell Schedule Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=128.0, core=true, t24Name=S.SCHEDULE.CALL.AMT)
/* This field holds the put amount for this fixing period. This will default from S.PUT.AMT and can be modified if S.DIFFERENT.AMT is set to 'Yes'.
When the option is knocked out(S.KNOCKOUT is set to yes) then for the this period, the S.SCHEDULE.PUT.AMT can be adjusted to cater to TARKO variants such as adjusted strike TARKO.
In such cases, for the fixing period in which the knock out occured, the S.SCHEDULE.CALL.AMT and S.SCHEDULE.PUT.AMT need not be based on the S.STRIKE.PRICE. */
        S_SCHEDULE_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Schedule Put Amount")
            @i18n:Tooltip (en="Sell Schedule Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=129.0, core=true, t24Name=S.SCHEDULE.PUT.AMT)
        /* This field holds the settlement amount for cash settled contracts. */
        S_SETTLEMENT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Sell Settlement Amount")
            @i18n:Tooltip (en="Sell Settlement Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=131.0, core=true, t24Name=S.SETTLEMENT.AMT)
        /* For each fixing date the settlement date will be populated considering the spot days and spot currency defined in FX.PARAMETERS along with BUY.CCY.CALENDAR and SEL.CCY.CALENDAR defined in the contract. */
        S_SETTLEMENT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Sell Settlement Date")
            @i18n:Tooltip (en="Sell Settlement Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=127.0, core=true, t24Name=S.SETTLEMENT.DATE)
        /* This field holds the spot exchange rate at the time of fixing. This field would be used to calculate the settlement amount for cash settled contracts. */
        S_SPOT_EXCHANGE_RATE : T24BusinessTypes:R
            @t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=130.0, core=true, t24Name=S.SPOT.EXCHANGE.RATE)
    }
    SY_FX_FORWARDS__VB_FIXING_DATE
    {
        VB_FIXED_STATUS : PT_Contract:SY_FX_FORWARDS__VB_FIXING_DATE__VB_FIXED_STATUS
            @i18n:Label (en="Vanilla Buy Fixed Status")
            @i18n:Tooltip (en="Vanilla Buy Fixed Status")
            @t24:i (align=L, inputBehaviour=N, maxLength=35, sysNumber=166.0, core=true, t24Name=VB.FIXED.STATUS)
        /* This field will say whether to exercise or expire the amount for the current fixing period. System will not automatically do fixing until a value is given in this field. This field will accept the value 'EXERCISE' 'EXPIRE' */
        VB_FIXING : PT_Contract:SY_FX_FORWARDS__VB_FIXING_DATE__VB_FIXING
            @i18n:Label (en="Vanilla Buy Fixing")
            @i18n:Tooltip (en="Vanilla Buy Fixing")
            @t24:i (align=L, inputBehaviour=I, maxLength=35, sysNumber=165.0, core=true, t24Name=VB.FIXING)
/* The fields from the VB.FIXING.DATE to VB.FIXING.STATUS are part of a multi value set. The value in this field will be populated based on the FIXING.FREQUENCY and FIXING.PERIODS.
The first fixing date can't be greater than VB.MATURITY.DATE and also the final fixing date should  always be equal to VB.MATURITY.DATE.
The fixing date will be populated considering BUY.CCY.CALENDAR, SEL.CCY.CALENDAR and the local region. */
        VB_FIXING_DATE : T24BusinessTypes:D
            @i18n:Label (en="Vanilla Buy Fixing date")
            @i18n:Tooltip (en="Vanilla Buy Fixing date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=159.0, core=true, t24Name=VB.FIXING.DATE)
        /* This field holds the call amount for this fixing period. This will default from VB.CALL.AMT and can be modified if VB.DIFFERENT.AMT is set to 'Yes'. */
        VB_SCHEDULE_CALL_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Schedule Call Amount")
            @i18n:Tooltip (en="Vanilla Buy Schedule Call Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=161.0, core=true, t24Name=VB.SCHEDULE.CALL.AMT)
        /* This field holds the put amount for this fixing period. This will default from VB.PUT.AMT and can be modified if VB.DIFFERENT.AMT is set to 'Yes'. */
        VB_SCHEDULE_PUT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Schedule Put Amount")
            @i18n:Tooltip (en="Vanilla Buy Schedule Put Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=162.0, core=true, t24Name=VB.SCHEDULE.PUT.AMT)
        /* If the contract is cash settled, then the value in the field will be settled. This field will not be calculated automatically, and the field is mandatory for cash settlement. */
        VB_SETTLEMENT_AMT : T24BusinessTypes:AMT
            @i18n:Label (en="Vanilla Buy Settlement Amount")
            @i18n:Tooltip (en="Vanilla Buy Settlement Amount")
            @t24:i (align=R, inputBehaviour=I, maxLength=19, sysNumber=164.0, core=true, t24Name=VB.SETTLEMENT.AMT)
        /* For each fixing date the settlement date will be populated considering the spot days and spot currency defined in FX.PARAMETERS along with BUY.CCY.CALENDAR and SEL.CCY.CALENDAR defined in the contract. */
        VB_SETTLEMENT_DATE : T24BusinessTypes:D
            @i18n:Label (en="Vanilla Buy Settlement Date")
            @i18n:Tooltip (en="Vanilla Buy Settlement Date")
            @t24:i (align=R, inputBehaviour=I, maxLength=11, sysNumber=160.0, core=true, t24Name=VB.SETTLEMENT.DATE)
        /* This field holds the spot exchange rate at the time of fixing. This field would be used to calculate the settlement amount for cash settled contracts. */
        VB_SPOT_EXCHANGE_RATE : T24BusinessTypes:R
            @i18n:Label (en="Vanilla Buy Spot Exchange Rate")
            @i18n:Tooltip (en="Vanilla Buy Spot Exchange Rate")
            @t24:i (align=R, inputBehaviour=I, maxLength=16, sysNumber=163.0, core=true, t24Name=VB.SPOT.EXCHANGE.RATE)
    }
}
Enumerations {
    SY_FX_FORWARDS__B_DIFFERENT_AMT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__B_FIXING_DATE__B_FIXED_STATUS : mml:string
        FIXED=FIXED
        KNOCKED_OUT=KNOCKED.OUT
        UNWOUND=UNWOUND
    SY_FX_FORWARDS__B_FIXING_DATE__B_FIXING : mml:string
        EXERCISE=EXERCISE
        EXPIRE=EXPIRE
    SY_FX_FORWARDS__B_KNOCK_IN : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__B_KNOCK_OUT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__B_OPTION_STYLE : mml:string
        AMERICAN=AMERICAN
        CARRIBEAN=CARRIBEAN
        EUROPEAN=EUROPEAN
    SY_FX_FORWARDS__B_OPTION_TYPE : mml:string
        CALL=CALL
    SY_FX_FORWARDS__B_RUN_CURRENT_FIXING : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__B_UNDO_FIXING : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__B_UNDO_KNOCKOUT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__CONTRACT_STATUS : mml:string
        ACTIVE=ACTIVE
        KNOCKOUT=KNOCKOUT
        MATURED=MATURED
        UNWOUND=UNWOUND
    SY_FX_FORWARDS__COUNTERPARTY_TRADE : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__DAY_CONVENTION : mml:string
        BWD=BWD
        FWD=FWD
    SY_FX_FORWARDS__INCL_VANILLA_OPTION : mml:string
        BUY=BUY
        NULL=NULL
    SY_FX_FORWARDS__PREMIUM_PAY_RECEIVE : mml:string
        PAY=PAY
        RECEIVE=RECEIVE
    SY_FX_FORWARDS__SUPPRESS_UNDERLYING : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_DIFFERENT_AMT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_FIXING_DATE__S_FIXED_STATUS : mml:string
        FIXED=FIXED
        KNOCKED_OUT=KNOCKED.OUT
        UNWOUND=UNWOUND
    SY_FX_FORWARDS__S_FIXING_DATE__S_FIXING : mml:string
        EXERCISE=EXERCISE
        EXPIRE=EXPIRE
    SY_FX_FORWARDS__S_KNOCK_IN : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_KNOCK_OUT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_OPTION_STYLE : mml:string
        AMERICAN=AMERICAN
        CARRIBEAN=CARRIBEAN
        EUROPEAN=EUROPEAN
    SY_FX_FORWARDS__S_OPTION_TYPE : mml:string
        PUT=PUT
    SY_FX_FORWARDS__S_RUN_CURRENT_FIXING : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_UNDO_FIXING : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__S_UNDO_KNOCKOUT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__UNWIND : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__VB_DIFFERENT_AMT : mml:string
        NO=NO
        YES=YES
    SY_FX_FORWARDS__VB_FIXING_DATE__VB_FIXED_STATUS : mml:string
        FIXED=FIXED
        KNOCKED_OUT=KNOCKED.OUT
        UNWOUND=UNWOUND
    SY_FX_FORWARDS__VB_FIXING_DATE__VB_FIXING : mml:string
        EXERCISE=EXERCISE
        EXPIRE=EXPIRE
    SY_FX_FORWARDS__VB_OPTION_STYLE : mml:string
        AMERICAN=AMERICAN
        CARRIBEAN=CARRIBEAN
        EUROPEAN=EUROPEAN
    SY_FX_FORWARDS__VB_OPTION_TYPE : mml:string
        CALL=CALL
    SY_FX_FORWARDS__VB_UNDO_FIXING : mml:string
        NO=NO
        YES=YES
}